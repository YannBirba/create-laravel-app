#!/bin/bash

VERSION="1.0.0"

CYAN="\033[36m"
GREEN="\033[32m"
RED="\033[31m"
YELLOW="\033[33m"
WHITE="\033[37m"
NC="\033[0m"
BOLD='\033[1m'

LOG_FILE="/var/log/create-laravel-app.log"

if [[ $1 == "-h" || $1 == "--help" ]]; then
    cat <<EOF
-- Create Laravel app ($VERSION) --

Usage: create-laravel-app [options]

Create a new Laravel app with the given services.

By running this script in the terminal you will create a Laravel app in your current directory or in a specified directory.

Please provide one or more of the supported services (mysql, pgsql, mariadb, redis, memcached, meilisearch, minio, mailpit, selenium, soketi).

If you do not specify which services you would like configured, a default stack of mysql, redis, meilisearch, mailpit, and selenium will be configured.

It uses this endpoint to get the Docker Compose file and the Sail file: https://laravel.build/app-name?with=service1,service2,service3

Options:
    -h, --help
    -v, --version
    -d, --directory
    -s, --services
    -n, --name
    -y, -Y, --yes (autostart)
EOF
    return 0
fi

if [[ $1 == "-v" || $1 == "--version" ]]; then
    printf "\nCreate Laravel app by \e]8;;https://github.com/YannBirba\e\\@YannBirba\e]8;;\e\ version %s \n" "$VERSION"
    return 0
fi

# Ensure that Docker is running...
if ! docker info >/dev/null 2>&1; then
    echo ""
    echo -e "${BOLD}${RED}✕ Docker is not running ✕${NO_BG}"
    echo ""
    echo -e "${GREEN}↪ ${YELLOW}Please start Docker and try again.${NC}"
    echo ""
    return 1
fi

name=""
dir="."
services="none"
auto_start="n"

available_services=("mysql" "pgsql" "mariadb" "redis" "memcached" "meilisearch" "minio" "mailpit" "selenium" "soketi")
services_available="${available_services[*]}"
services_available="${services_available// /, }"

while [[ $# -gt 0 ]]; do
    key="$1"
    case $key in
    -n | --name)
        name="$2"
        shift
        shift
        ;;
    -d | --directory)
        dir="$2"
        shift
        shift
        ;;
    -s | --services)
        services="$2"
        shift
        shift
        ;;
    -y | -Y | --yes)
        auto_start="yes"
        shift
        ;;
    *)
        shift
        ;;
    esac
done

if [[ -z "$services" ]]; then
    services="none"
fi

# Please only use alpha-numeric characters, dashes, and underscores.
if [[ -z "$name" ]] || [[ ! "$name" =~ ^[a-zA-Z0-9_-]+$ ]]; then
    echo ""
    echo "↪ Please provide a valid name for your app (only alpha-numeric characters, dashes, and underscores are allowed)"
    echo ""
    return 1
fi

# Validate services
if [[ $services != "none" ]]; then
    for service in $(echo "${services//,/ }"); do
        if [[ ! " ${available_services[*]} " =~ " ${service} " ]]; then
            echo ""
            printf "${BOLD}${YELLOW}↪ Service \"%s\" is not available, available services: \e]8;;https://laravel.com/docs/11.x/installation#choosing-your-sail-services\e\\%s\e]8;;\e\ .${NC}\n" "$service" "$services_available"
            echo "[$(date)] -- Service \"$service\" is not available, available services: $services_available ." >>"$LOG_FILE"
            echo ""
            return 1
        fi
    done
fi

# Determine app directory
if [[ $dir == "." ]]; then
    dir=$(pwd)
    app_dir="$dir/$name"
else
    if [[ ! -d $dir ]]; then
        mkdir "$dir"
        cd "$dir" || return 1
        app_dir="$dir/$name"
    else
        echo ""
        echo -e "${RED}${BOLD}Directory $dir already exists ${NC}"
        echo ""
        return 1
    fi
fi

if [[ $services == "none" ]]; then
    echo ""
    printf "Creating Laravel app named %s with \e]8;;https://laravel.com/docs/11.x/installation#choosing-your-sail-services\e\\default services\e]8;;\e\ in %s\n" "$name" "$app_dir"
    echo ""

    response=$(curl -s -o /tmp/laravel-app-create.response -w '%{http_code}' "https://laravel.build/${name}" || echo "000")
    HTTP_STATUS=$(tail -n1 <<<"$response")
    response_body=$(</tmp/laravel-app-create.response)

    if [[ "$HTTP_STATUS" -ge 400 ]] || [[ "$HTTP_STATUS" -eq "000" ]]; then
        echo ""
        echo -e "${RED}${BOLD}↪ An error occurred while creating the app with status code ${HTTP_STATUS} - Error message: ${response_body} ${NC}"
        echo /tmp/laravel-app-create.response | tee -a "$LOG_FILE"
        echo ""
        echo "[$(date)] -- An error occurred while creating the app" >>"$LOG_FILE"
        return 1
    else
        bash -c "$response_body"
    fi
else
    echo ""
    echo "Creating Laravel app named $name with $services in $app_dir"
    echo ""

    response=$(curl -s -o /tmp/laravel-app-create.response -w '%{http_code}' "https://laravel.build/${name}?with=${services}" || echo "000")
    HTTP_STATUS=$(tail -n1 <<<"$response")
    response_body=$(</tmp/laravel-app-create.response)

    if [[ "$HTTP_STATUS" -ge 400 ]] || [[ "$HTTP_STATUS" -eq "000" ]]; then
        echo ""
        echo -e "${RED}${BOLD}↪ An error occurred while creating the app with status code ${HTTP_STATUS} - Error message: ${response_body} ${NC}"
        echo /tmp/laravel-app-create.response | tee -a "$LOG_FILE"
        echo ""
        echo "[$(date)] -- An error occurred while creating the app" >>"$LOG_FILE"
        return 1
    else
        bash -c "$response_body"
    fi
fi

echo ""
printf "${GREEN}${BOLD}✓ App created successfully in : \e]8;;code %s\e\\%s\e]8;;\e\ .${NC}\n" "$app_dir" "$app_dir"
echo ""

# Change to app directory
if ! cd "$name"; then
    echo "Failed to change directory to $name" | tee -a "$LOG_FILE"
    return 1
fi

# Autostart application if needed
if [[ $auto_start == "yes" ]]; then
    ./vendor/bin/sail up
else
    echo -e "${BOLD}${CYAN}Your app is ready! Build something amazing.${NC}"
    echo ""
    echo -e "${BOLD}${WHITE}Would you like to run the app now? ${YELLOW}[Y/n]${NC}"
    read -r run_app

    if [[ $run_app == "Y" || $run_app == "y" || $run_app == "" ]]; then
        ./vendor/bin/sail up
    fi
fi